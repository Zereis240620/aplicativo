# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fnVZURP3SQLcEnL4ZJTXrOies88PflRJ
"""

#from google.colab import drive
#drive.mount('/content/drive')

import joblib as jb 
modelo = jb.load('/wendygomes/aplicativo/modelo.pk1')

#!pip install streamlit

##streamlit
## Idade,TOT,SVD,PAI,Infeccao,CVC,Sedacao,Comorbidade,SAPS,Temperatura,PAS,FC,Creatinina,DVAInternacao

import pandas as pd
import streamlit as st 
import joblib as jb

model = jb.load('/wendygomes/aplicativo/modelo.pk1')

#Cabecalho
st.subheader("Informações dos dados")

#Nome do usuário
user_input = st.sidebar.text_input("Digite seu nome")
st.write("Paciente: ", user_input)

def get_user_data():
    Idade = st.sidebar.slider("Idade", 18,120,30)
    TOT = st.radio("TOT", ["sim", "nao"])
    SVD = st.radio("SVD", ["sim", "nao"])
    PAI = st.radio("PAI", ["sim", "nao"])
    Infeccao = st.radio("Infeccao", ["sim", "nao"])
    CVC = st.radio("CVC", ["sim", "nao"])
    Sedacao = st.radio("Sedacao", ["sim", "nao"])
    Comorbidade = st.radio("Comorbidade", ["sim", "nao"])
    SAPS = st.sidebar.slider("SAPS", 0,200,55)
    Temperatura = st.sidebar.slider("Temperatura", 34,40,36)
    PAS = st.sidebar.slider("PAS", 60,300,130)
    FC = st.sidebar.slider("FC", 40,200,90)
    Creatinina = st.sidebar.slider("Creatinina", 0.1,20.0,1.1)
    
    user_data = {"Idade": Idade,
                "TOT": TOT,
                "SVD": SVD,
                "PAI": PAI,
                "Infeccao": Infeccao,
                "CVC": CVC,
                "Sedacao": Sedacao,
                "Comorbidade": Comorbidade,
                "SAPS": SAPS,
                "Temperatura": Temperatura,
                "PAS": PAS,
                "FC": FC,
                "Creatinina": Creatinina,
                }
    features = pd.DataFrame(user_data, index = [0])
                           
    categoriaColuna = ["TOT", "SVD", "PAI", "Infeccao", "CVC", "Sedacao", "Comorbidade"]
    for coluna in categoriaColuna:
      features = pd.concat([features, pd.get_dummies(features[coluna], prefix=coluna)], axis=1)
      features = features.drop(columns=[coluna])
    return features

user_input_variables = get_user_data()

#Gráfico
graf = st.bar_chart(user_input_variables)

st.subheader("Dados do usuario")
st.write(user_input_variables)

#Predicao
prediction = model.predict(user_input_variables)
st.subheader("Previsão: ")
st.write(prediction)

#0 = não tem pretensão a ter
#1 = tem pretensão

#!streamlit run /usr/local/lib/python3.8/dist-packages/sklearn/base.py --server.fileWatcherType = none

#!streamlit run /content/drive/MyDrive/UFBA/PROJETO/MEU TCC/app.py --server.fileWatcherType = none
